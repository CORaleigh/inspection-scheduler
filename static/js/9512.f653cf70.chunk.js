"use strict";(globalThis.webpackChunkinspections_app=globalThis.webpackChunkinspections_app||[]).push([[9512],{59512:(e,t,r)=>{r.r(t),r.d(t,{default:()=>j});var i=r(27366),s=(r(93169),r(92026)),a=r(32718),o=(r(25243),r(49861)),n=r(38511),l=r(64307),h=r(10064),c=r(35995),d=(r(71907),r(22892),r(66978)),p=r(41499),u=r(74184),y=r(97642),v=r(90724),m=r(70361),_=r(6061),g=r(11936),b=r(29598),f=r(17775),w=r(42537),S=r(63780),C=r(4926);const k=a.Z.getLogger("esri.core.workers.WorkerHandle");class T{constructor(e,t,r,i={}){this._mainMethod=t,this._listeners=[],this._promise=(0,C.bA)(e,{...i,scheduler:r}).then((e=>{if(void 0===this._thread){this._thread=e,this._promise=null,i.hasInitialize&&this.broadcast({},"initialize");for(const e of this._listeners)this._connectListener(e)}else e.close()})),this._promise.catch((t=>k.error(`Failed to initialize ${e} worker: ${t}`)))}on(e,t){const r={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(r),this._connectListener(r),(0,w.kB)((()=>{r.removed=!0,(0,S.Od)(this._listeners,r),this._thread&&(0,s.pC)(r.threadHandle)&&r.threadHandle.remove()}))}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,r){if(this._thread){const i=this.getTransferList(t,e);return this._thread.invoke(e,t,{transferList:i,signal:r})}return this._promise?this._promise.then((()=>((0,d.k_)(r),this.invokeMethod(e,t,r)))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then((()=>{})):this._promise?this._promise.then((()=>this.broadcast(e,t))):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then((t=>{e.removed||(e.threadHandle=t)}))}}class L extends T{constructor(e){super("LercWorker","_decode",e,{strategy:"dedicated"}),this.scheduler=e}decode(e,t,r){return e&&0!==e.byteLength?this.invoke({buffer:e,options:t},r):Promise.resolve(null)}getTransferList(e){return[e.buffer]}}const I=new Map;const x=a.Z.getLogger("esri.layers.ElevationLayer");let V=class extends((0,f.Z)((0,g.Y)((0,_.q)((0,b.I)((0,y.R)(u.Z)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=function(e){let t=I.get(e);return t||(t={instance:new L(e),ref:0},I.set(e,t)),++t.ref,t.instance}()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){(function(e){if(null==e)return;const t=e.scheduler,r=I.get(t);r&&--r.ref<=0&&(r.instance.destroy(),I.delete(t))})(this._lercDecoder),this._lercDecoder=null}set minScale(e){this.constructed&&x.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(e){this.constructed&&x.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(e,t){let r=t.currentVersion;return r||(r=9.3),r}load(e){const t=(0,s.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new h.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).then((()=>this._fetchImageService(t)),(()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,r,i){const a=(0,s.pC)((i=i||{signal:null}).signal)?i.signal:i.signal=(0,d.yi)().signal,o={responseType:"array-buffer",signal:a},n={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,r,i))).then((()=>(0,p.default)(this.getTileUrl(e,t,r),o))).then((e=>this._lercDecoder.decode(e.data,n,a))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))}getTileUrl(e,t,r){const i=!this.tilemapCache&&this.supportsBlankTile,s=(0,c.B7)({...this.parsedUrl.query,blankTile:!i&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${r}${s?"?"+s:""}`}async queryElevation(e,t){const{ElevationQuery:i}=await r.e(6382).then(r.bind(r,16382));return(0,d.k_)(t),(new i).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:i}=await r.e(6382).then(r.bind(r,16382));return(0,d.k_)(t),(new i).createSampler(this,e,t)}_fetchTileAvailability(e,t,r,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,r,i):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},r=await(0,p.default)(this.parsedUrl.path,t);r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl})}};(0,i._)([(0,o.Cb)({json:{read:{source:"copyrightText"}}})],V.prototype,"copyright",void 0),(0,i._)([(0,o.Cb)({readOnly:!0,type:v.Z})],V.prototype,"heightModelInfo",void 0),(0,i._)([(0,o.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],V.prototype,"path",void 0),(0,i._)([(0,o.Cb)({type:["show","hide"]})],V.prototype,"listMode",void 0),(0,i._)([(0,o.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],V.prototype,"minScale",null),(0,i._)([(0,o.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],V.prototype,"maxScale",null),(0,i._)([(0,o.Cb)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],V.prototype,"opacity",void 0),(0,i._)([(0,o.Cb)({type:["ArcGISTiledElevationServiceLayer"]})],V.prototype,"operationalLayerType",void 0),(0,i._)([(0,o.Cb)()],V.prototype,"sourceJSON",void 0),(0,i._)([(0,o.Cb)({json:{read:!1},value:"elevation",readOnly:!0})],V.prototype,"type",void 0),(0,i._)([(0,o.Cb)(m.HQ)],V.prototype,"url",void 0),(0,i._)([(0,o.Cb)()],V.prototype,"version",void 0),(0,i._)([(0,n.r)("version",["currentVersion"])],V.prototype,"readVersion",null),V=(0,i._)([(0,l.j)("esri.layers.ElevationLayer")],V);const j=V}}]);
//# sourceMappingURL=9512.f653cf70.chunk.js.map