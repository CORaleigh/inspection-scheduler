"use strict";(globalThis.webpackChunkinspections_app=globalThis.webpackChunkinspections_app||[]).push([[9887],{29887:(e,t,a)=>{a.r(t),a.d(t,{applyEdits:()=>u,isEditableLayer:()=>p});var s=a(84652),r=a(92026),d=a(10064),i=a(35995),l=a(40110),n=a(52639),o=a(64455);function p(e){var t,a;return!0===(null==e||null==(t=e.capabilities)||null==(a=t.operations)?void 0:a.supportsEditing)&&e&&(!("editingEnabled"in e)||e.editingEnabled)}async function u(e,t,a,r){let d,i;const l={edits:a,result:new Promise(((e,t)=>{d=e,i=t}))};e.emit("apply-edits",l);try{const{results:i,edits:l}=await h(e,t,a,r),n=e=>e.filter((e=>!e.error)).map(s.d9),o={edits:l,addedFeatures:n(i.addFeatureResults),updatedFeatures:n(i.updateFeatureResults),deletedFeatures:n(i.deleteFeatureResults),addedAttachments:n(i.addAttachmentResults),updatedAttachments:n(i.updateAttachmentResults),deletedAttachments:n(i.deleteAttachmentResults)};return(o.addedFeatures.length||o.updatedFeatures.length||o.deletedFeatures.length||o.addedAttachments.length||o.updatedAttachments.length||o.deletedAttachments.length)&&e.emit("edits",o),d(o),i}catch(n){throw i(n),n}}async function h(e,t,a,s){if(await e.load(),!function(e){return e&&null!=e.applyEdits}(t))return Promise.reject(new d.Z(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e}));if(!e.editingEnabled)throw new d.Z(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const i=await function(e,t,a){const s=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),i=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments);if(!t||!s&&!i)throw new d.Z(`${e.type}-layer:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!e.capabilities.data.isVersioned&&a&&a.gdbVersion)throw new d.Z(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!e.capabilities.editing.supportsRollbackOnFailure&&a&&a.rollbackOnFailureEnabled)throw new d.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!e.capabilities.editing.supportsGlobalId&&a&&a.globalIdUsed)throw new d.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!e.capabilities.editing.supportsGlobalId&&i)throw new d.Z(`${e.type}-layer:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if((!a||!a.globalIdUsed)&&i)throw new d.Z(`${e.type}-layer:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");const n={...t};if(n.addFeatures=t&&l.Z.isCollection(t.addFeatures)?t.addFeatures.toArray():n.addFeatures||[],n.updateFeatures=t&&l.Z.isCollection(t.updateFeatures)?t.updateFeatures.toArray():n.updateFeatures||[],n.deleteFeatures=t&&l.Z.isCollection(t.deleteFeatures)?t.deleteFeatures.toArray():n.deleteFeatures||[],n.addFeatures.length&&!e.capabilities.operations.supportsAdd)throw new d.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support adding features.");if(n.updateFeatures.length&&!e.capabilities.operations.supportsUpdate)throw new d.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support updating features.");if(n.deleteFeatures.length&&!e.capabilities.operations.supportsDelete)throw new d.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support deleting features.");n.addAttachments=n.addAttachments||[],n.updateAttachments=n.updateAttachments||[],n.deleteAttachments=n.deleteAttachments||[],n.addFeatures=n.addFeatures.map(y),n.updateFeatures=n.updateFeatures.map(y);const p=a&&a.globalIdUsed;return n.addFeatures.forEach((t=>function(e,t,a){c(e,t,a)}(t,e,p))),n.updateFeatures.forEach((t=>function(e,t,a){if(c(e,t,a),"geometry"in e&&(0,r.pC)(e.geometry)&&!t.capabilities.editing.supportsGeometryUpdate)throw new d.Z(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}(t,e,p))),n.deleteFeatures.forEach((t=>function(e,t,a){c(e,t,a)}(t,e,p))),n.addAttachments.forEach((t=>m(t,e))),n.updateAttachments.forEach((t=>m(t,e))),async function(e){const t=e.addFeatures,a=e.updateFeatures,s=t.concat(a).map((e=>e.geometry)),r=await(0,o.aX)(s),d=t.length,i=a.length;return r.slice(0,d).forEach(((t,a)=>{e.addFeatures[a].geometry=t})),r.slice(d,d+i).forEach(((t,a)=>{e.updateFeatures[a].geometry=t})),e}(n)}(e,a,s);return i.addFeatures.length||i.updateFeatures.length||i.deleteFeatures.length||i.addAttachments.length||i.updateAttachments.length||i.deleteAttachments.length?{edits:i,results:await t.applyEdits(i,s)}:{edits:i,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}function c(e,t,a){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new d.Z(`${t.type}-layer:invalid-parameter`,"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in e)&&!e.globalId)throw new d.Z(`${t.type}-layer:invalid-parameter`,"'globalId' of the feature should be passed when 'globalIdUsed' is true")}if("geometry"in e&&(0,r.pC)(e.geometry)){if(e.geometry.hasZ&&!1===t.capabilities.data.supportsZ)throw new d.Z(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities.data.supportsM)throw new d.Z(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function m(e,t){const{feature:a,attachment:s}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new d.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new d.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!s.globalId)throw new d.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!s.data&&!s.uploadId)throw new d.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(s.data instanceof File&&s.data.name)&&!s.name)throw new d.Z(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities.editing.supportsUploadWithItemId&&s.uploadId)throw new d.Z(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof s.data){const e=(0,i.sJ)(s.data);if(e&&!e.isBase64)throw new d.Z(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}function y(e){const t=new n.Z;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}}}]);
//# sourceMappingURL=9887.700be340.chunk.js.map