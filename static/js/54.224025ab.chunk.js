"use strict";(globalThis.webpackChunkinspections_app=globalThis.webpackChunkinspections_app||[]).push([[54],{70054:(e,t,o)=>{o.r(t),o.d(t,{default:()=>x});var r=o(27366),i=(o(93169),o(42265)),l=o(92026),s=(o(32718),o(25243),o(49861)),n=o(38511),p=o(64307),a=o(35995),y=(o(71907),o(22892),o(22061)),u=o(16851),d=o(41499),c=o(91946),h=o(61459),S=o(16072),b=(o(76626),o(74184)),v=o(97642),C=o(70361),f=o(6061),m=o(6693),_=o(29598),g=o(25874),R=o(56811);const k=["atom","xml"],Z={base:y.Z,key:"type",typeMap:{"simple-line":u.Z},errorContext:"symbol"},w={base:y.Z,key:"type",typeMap:{"picture-marker":c.Z,"simple-marker":S.Z},errorContext:"symbol"},F={base:y.Z,key:"type",typeMap:{"simple-fill":h.Z},errorContext:"symbol"};let j=class extends((0,m.h)((0,g.Q)((0,f.q)((0,_.I)((0,R.M)((0,v.R)(b.Z))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?(0,a.vt)(this.url,k)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")})),t.featureCollection.layers}load(e){const t=(0,l.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),Promise.resolve(this)}async _fetchService(e){const{data:t}=await(0,d.default)(i.Z.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};(0,r._)([(0,s.Cb)()],j.prototype,"description",void 0),(0,r._)([(0,s.Cb)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],j.prototype,"title",null),(0,r._)([(0,s.Cb)()],j.prototype,"featureCollections",void 0),(0,r._)([(0,n.r)("service","featureCollections",["featureCollection.layers"])],j.prototype,"readFeatureCollections",null),(0,r._)([(0,s.Cb)(C.id)],j.prototype,"id",void 0),(0,r._)([(0,s.Cb)(C.rn)],j.prototype,"legendEnabled",void 0),(0,r._)([(0,s.Cb)({types:Z,json:{write:!0}})],j.prototype,"lineSymbol",void 0),(0,r._)([(0,s.Cb)({type:["show","hide"]})],j.prototype,"listMode",void 0),(0,r._)([(0,s.Cb)({types:w,json:{write:!0}})],j.prototype,"pointSymbol",void 0),(0,r._)([(0,s.Cb)({types:F,json:{write:!0}})],j.prototype,"polygonSymbol",void 0),(0,r._)([(0,s.Cb)({type:["GeoRSS"]})],j.prototype,"operationalLayerType",void 0),(0,r._)([(0,s.Cb)()],j.prototype,"outSpatialReference",void 0),(0,r._)([(0,s.Cb)(C.HQ)],j.prototype,"url",void 0),(0,r._)([(0,s.Cb)({readOnly:!0,json:{read:!1},value:"geo-rss"})],j.prototype,"type",void 0),j=(0,r._)([(0,p.j)("esri.layers.GeoRSSLayer")],j);const x=j}}]);
//# sourceMappingURL=54.224025ab.chunk.js.map