"use strict";(globalThis.webpackChunkinspections_app=globalThis.webpackChunkinspections_app||[]).push([[5264],{43813:(e,t,r)=>{r.d(t,{E:()=>o});class s{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;const t=e.toJSON(),r={};return Object.keys(t).forEach((e=>{const s=this._options[e];if(s){const o="boolean"!=typeof s&&s.name?s.name:e,a="boolean"!=typeof s&&s.getter?s.getter(t):t[e];null!=a&&(r[o]=(e=>{if(!Array.isArray(e))return!1;const[t]=e;return"number"==typeof t||"string"==typeof t})(a)?a.join(","):"object"==typeof a?JSON.stringify(a):a)}else r[e]=t[e]}),this),r}}function o(e){return new s(e)}},99303:(e,t,r)=>{r.d(t,{et:()=>b,ef:()=>_,bI:()=>S,mT:()=>C,Wf:()=>N});var s=r(18202),o=r(92026),a=r(10064),n=r(41499),i=r(23084),l=r(27366),p=(r(93169),r(32718),r(25243),r(49861)),u=r(38511),d=r(64307),c=(r(35995),r(71907),r(22892),r(67123)),f=r(52639),y=r(81099),v=r(35091),h=r(5817);let g=class extends c.wq{constructor(e){super(e),this.directions=null,this.route=null,this.routeName=null,this.stops=null}};(0,l._)([(0,p.Cb)({type:h.Z,json:{write:!0}})],g.prototype,"directions",void 0),(0,l._)([(0,p.Cb)({type:f.Z,json:{write:!0}})],g.prototype,"route",void 0),(0,l._)([(0,p.Cb)({type:String,json:{write:!0}})],g.prototype,"routeName",void 0),(0,l._)([(0,p.Cb)({type:[f.Z],json:{write:!0}})],g.prototype,"stops",void 0),g=(0,l._)([(0,d.j)("esri.tasks.support.RouteResult")],g);const m=g;function T(e){return e&&y.default.fromJSON(e).features.map((e=>e))}let M=class extends c.wq{constructor(e){super(e),this.barriers=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,t){return T(t.barriers||t.pointBarriers)}readPolylineBarriers(e){return T(e)}readPolygonBarriers(e){return T(e)}};(0,l._)([(0,p.Cb)({aliasOf:"pointBarriers"})],M.prototype,"barriers",void 0),(0,l._)([(0,p.Cb)({type:[v.Z]})],M.prototype,"messages",void 0),(0,l._)([(0,p.Cb)({type:[f.Z]})],M.prototype,"pointBarriers",void 0),(0,l._)([(0,u.r)("pointBarriers",["barriers","pointBarriers"])],M.prototype,"readPointBarriers",null),(0,l._)([(0,p.Cb)({type:[f.Z]})],M.prototype,"polylineBarriers",void 0),(0,l._)([(0,u.r)("polylineBarriers")],M.prototype,"readPolylineBarriers",null),(0,l._)([(0,p.Cb)({type:[f.Z]})],M.prototype,"polygonBarriers",void 0),(0,l._)([(0,u.r)("polygonBarriers")],M.prototype,"readPolygonBarriers",null),(0,l._)([(0,p.Cb)({type:[m]})],M.prototype,"routeResults",void 0),M=(0,l._)([(0,d.j)("esri.tasks.support.RouteResultsContainer")],M);const w=M;function b(e,t,r,s){s[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function _(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function C(e){const t=[],r=[],{directions:s=[],routes:{features:o=[],spatialReference:a=null}={},stops:{features:n=[],spatialReference:i=null}={},barriers:l,polygonBarriers:p,polylineBarriers:u,messages:d}=e.data,c="esri.tasks.RouteTask.NULL_ROUTE_NAME";let f,y,v=!0;const h=o&&a||n&&i||l&&l.spatialReference||p&&p.spatialReference||u&&u.spatialReference;s.forEach((e=>{t.push(f=e.routeName),r[f]={directions:e}})),o.forEach((e=>{-1===t.indexOf(f=e.attributes.Name)&&(t.push(f),r[f]={}),e.geometry&&(e.geometry.spatialReference=h),r[f].route=e})),n.forEach((e=>{y=e.attributes,-1===t.indexOf(f=y.RouteName||c)&&(t.push(f),r[f]={}),f!==c&&(v=!1),e.geometry&&(e.geometry.spatialReference=h),null==r[f].stops&&(r[f].stops=[]),r[f].stops.push(e)})),n.length>0&&!0===v&&(r[t[0]].stops=r[c].stops,delete r[c],t.splice(t.indexOf(c),1));const g=t.map((e=>(r[e].routeName=e===c?null:e,r[e])));return w.fromJSON({routeResults:g,pointBarriers:l,polygonBarriers:p,polylineBarriers:u,messages:d})}function N(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)if((0,o.pC)(e)&&e.hasZ)return!0}return!1}async function S(e){if(!e)throw new a.Z("network-service:missing-url","Url to Network service is missing");const{data:t}=await(0,n.default)(e,{query:{f:"json"}});t.supportedTravelModes||(t.supportedTravelModes=[]);for(let s=0;s<t.supportedTravelModes.length;s++)t.supportedTravelModes[s].id||(t.supportedTravelModes[s].id=t.supportedTravelModes[s].itemId);const r=t.currentVersion>=10.4?async function(e){try{const{data:{supportedTravelModes:t,defaultTravelMode:r}}=await(0,n.default)(e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json"}});return{supportedTravelModes:t,defaultTravelMode:r}}catch(t){throw new a.Z("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:t})}}(e):async function(e){const{data:t}=await(0,n.default)(e.substring(0,e.indexOf("/rest/")+6)+"info",{query:{f:"json"}});if(!t||!t.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};e=t.owningSystemUrl;const{data:r}=await(0,n.default)(e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json"}}),o=(0,s.hS)("helperServices.routingUtilities.url",r);if(!o)return{supportedTravelModes:[],defaultTravelMode:null};const a=(0,i.en)(e),l=/\/solve$/.test(a.path)?"Route":/\/solveClosestFacility$/.test(a.path)?"ClosestFacility":"ServiceAreas",p=await(0,n.default)(o+("/"===o[o.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:l}}),u=[];let d=null;if(p&&p.data&&p.data.results&&p.data.results.length){const e=p.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(t.value&&t.value.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);u.push(t)}}else"defaultTravelMode"===t.paramName&&(d=t.value)}return{supportedTravelModes:u,defaultTravelMode:d}}(e),{defaultTravelMode:o,supportedTravelModes:l}=await r;return t.defaultTravelMode=o,t.supportedTravelModes=l,t}},4253:(e,t,r)=>{r.d(t,{Y:()=>d});var s=r(27366),o=(r(93169),r(18202)),a=r(92026),n=(r(32718),r(25243),r(49861),r(64307)),i=r(10064),l=r(35995),p=(r(71907),r(22892),r(41499)),u=r(4338);const d=e=>{let t=class extends e{async getServiceDescription(e){return this._serviceDescriptionPromise||(this._serviceDescriptionPromise=this._fetchServiceDescription(e)),this._serviceDescriptionPromise}async _fetchServiceDescription(e){if(!this.url||!this.parsedUrl)throw new i.Z("network-service:missing-url","Url to Network service is missing");const t=this.url,{data:r}=await(0,p.default)(t,{query:{f:"json",token:e}});r.supportedTravelModes||(r.supportedTravelModes=[]);for(let o=0;o<r.supportedTravelModes.length;o++)r.supportedTravelModes[o].id||(r.supportedTravelModes[o].id=r.supportedTravelModes[o].itemId);const s=r.currentVersion>=10.4?async function(e,t){try{const{data:{supportedTravelModes:r,defaultTravelMode:s}}=await(0,p.default)(e+("/"===e[e.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json",token:t}});return{supportedTravelModes:r,defaultTravelMode:s}}catch(r){throw new i.Z("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:r})}}(t,e):async function(e,t){const{data:r}=await(0,p.default)(e.substring(0,e.indexOf("/rest/")+6)+"info",{query:{f:"json",token:t}});if(!r||!r.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};e=r.owningSystemUrl;const{data:s}=await(0,p.default)(e+("/"===e[e.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json",token:t}}),a=(0,o.hS)("helperServices.routingUtilities.url",s);if(!a)return{supportedTravelModes:[],defaultTravelMode:null};const n=(0,l.mN)(e),i=/\/solveClosestFacility$/.test(n.path)?"Route":/\/solveClosestFacility$/.test(n.path)?"ClosestFacility":"ServiceAreas",u=await(0,p.default)(a+("/"===a[a.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:i,token:t}}),d=[];let c=null;if(u&&u.data&&u.data.results&&u.data.results.length){const e=u.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(t.value&&t.value.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);d.push(t)}}else"defaultTravelMode"===t.paramName&&(c=t.value)}return{supportedTravelModes:d,defaultTravelMode:c}}(t,e),{defaultTravelMode:a,supportedTravelModes:n}=await s;return r.defaultTravelMode=a,r.supportedTravelModes=n,r}_isInputGeometryZAware(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)if((0,a.pC)(e)&&e.hasZ)return!0}return!1}_dropZValuesOffInputGeometry(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}};return t=(0,s._)([(0,n.j)("esri.tasks.mixins.NAServiceDescription")],t),t};let c=class extends(d(u.Z)){};c=(0,s._)([(0,n.j)("esri.tasks.mixins.NAServiceDescription")],c)},5817:(e,t,r)=>{r.d(t,{Z:()=>v});var s=r(27366),o=(r(93169),r(92026)),a=(r(32718),r(25243),r(49861)),n=r(38511),i=r(64307),l=(r(35995),r(71907),r(22892),r(78952)),p=r(7882),u=r(53866),d=r(29909),c=(r(59486),r(52639)),f=r(81099);let y=class extends f.default{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){(e||[]).forEach((e=>{this._decompressFeatureGeometry(e,t.summary.envelope.spatialReference)}));const r=l.Z.fromJSON(t.spatialReference);return e.map((e=>{const t=c.Z.fromJSON(e),s=e.geometry&&e.geometry.spatialReference;return t.geometry&&!s&&((0,o.Wg)(t.geometry).spatialReference=r),t.strings=e.strings,t.events=(e.events||[]).map((t=>{const r=new c.Z({geometry:new p.Z({x:t.point.x,y:t.point.y,z:t.point.z,hasZ:void 0!==t.point.z,spatialReference:e.geometry&&e.geometry.spatialReference}),attributes:{ETA:t.ETA,arriveTimeUTC:t.arriveTimeUTC}});return r.strings=t.strings,r})),t}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>(0,o.Wg)(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressFeatureGeometry(e,t){e.geometry=this._decompressGeometry(e.compressedGeometry,t)}_decompressGeometry(e,t){let r=0,s=0,o=0,a=0;const n=[];let i,l,p,u,d,c,f,y,v=0,h=0,g=0;if(d=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),d||(d=[]),0===parseInt(d[v],32)){v=2;const e=parseInt(d[v],32);v++,c=parseInt(d[v],32),v++,1&e&&(h=d.indexOf("|")+1,f=parseInt(d[h],32),h++),2&e&&(g=d.indexOf("|",h)+1,y=parseInt(d[g],32),g++)}else c=parseInt(d[v],32),v++;for(;v<d.length&&"|"!==d[v];){i=parseInt(d[v],32)+r,v++,r=i,l=parseInt(d[v],32)+s,v++,s=l;const e=[i/c,l/c];h&&(u=parseInt(d[h],32)+o,h++,o=u,e.push(u/f)),g&&(p=parseInt(d[g],32)+a,g++,a=p,e.push(p/y)),n.push(e)}return{paths:[n],hasZ:h>0,hasM:g>0,spatialReference:t}}_mergePolylinesToSinglePath(e,t){let r=[];(e||[]).forEach((e=>{e.paths.forEach((e=>{r=r.concat(e)}))}));const s=[];let o=[0,0];return r.forEach((e=>{e[0]===o[0]&&e[1]===o[1]||(s.push(e),o=e)})),new d.Z({paths:[s]},t)}};(0,s._)([(0,a.Cb)({type:u.Z,json:{read:{source:"summary.envelope"}}})],y.prototype,"extent",void 0),(0,s._)([(0,a.Cb)()],y.prototype,"features",void 0),(0,s._)([(0,n.r)("features")],y.prototype,"readFeatures",null),(0,s._)([(0,a.Cb)()],y.prototype,"geometryType",void 0),(0,s._)([(0,a.Cb)({readOnly:!0})],y.prototype,"mergedGeometry",null),(0,s._)([(0,a.Cb)()],y.prototype,"routeId",void 0),(0,s._)([(0,a.Cb)()],y.prototype,"routeName",void 0),(0,s._)([(0,a.Cb)({value:null,readOnly:!0})],y.prototype,"strings",null),(0,s._)([(0,a.Cb)({json:{read:{source:"summary.totalDriveTime"}}})],y.prototype,"totalDriveTime",void 0),(0,s._)([(0,a.Cb)({json:{read:{source:"summary.totalLength"}}})],y.prototype,"totalLength",void 0),(0,s._)([(0,a.Cb)({json:{read:{source:"summary.totalTime"}}})],y.prototype,"totalTime",void 0),y=(0,s._)([(0,i.j)("esri.tasks.support.DirectionsFeatureSet")],y);const v=y},63516:(e,t,r)=>{r.d(t,{Z:()=>u});var s=r(27366),o=(r(93169),r(32718),r(25243),r(49861)),a=r(43404),n=r(64307),i=(r(35995),r(71907),r(22892),r(67123));const l=new a.Xn({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let p=class extends i.wq{constructor(e){super(e),this.description=null,this.type=null}};(0,s._)([(0,o.Cb)({type:String,json:{write:!0}})],p.prototype,"description",void 0),(0,s._)([(0,o.Cb)({type:String,json:{read:l.read,write:l.write}})],p.prototype,"type",void 0),p=(0,s._)([(0,n.j)("esri.tasks.support.GPMessage")],p);const u=p},35091:(e,t,r)=>{r.d(t,{Z:()=>u});var s=r(27366),o=(r(93169),r(32718),r(25243),r(49861)),a=r(43404),n=r(64307),i=(r(35995),r(71907),r(22892),r(63516));const l=new a.Xn({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let p=class extends i.Z{constructor(e){super(e),this.type=null}};(0,s._)([(0,o.Cb)({type:String,json:{read:l.read,write:l.write}})],p.prototype,"type",void 0),p=(0,s._)([(0,n.j)("esri.tasks.support.NAMessage")],p);const u=p}}]);
//# sourceMappingURL=5264.997b6e2a.chunk.js.map